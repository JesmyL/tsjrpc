(function(c,w){typeof exports=="object"&&typeof module<"u"?w(exports):typeof define=="function"&&define.amd?define(["exports"],w):(c=typeof globalThis<"u"?globalThis:c||self,w(c.tsjrpc={}))})(this,function(c){"use strict";const w=v=>{const{beforeEach:h,feedbackOnEach:y,onErrorMessage:l}=v,i={},k={},s={};return v.atom.subscribe(async({invoke:{scope:e,method:n,args:a},invoke:f,sendResponse:u,tool:t,requestId:d})=>{const r=async()=>{try{if(h!==void 0&&(await h({invoke:f,args:a,tool:t})).isStopPropagation)return;if(i[e]===void 0)throw new Error(`the scope ${e} is not registered - ${n}()`);if(typeof i[e][n]!="function")throw new Error(`the ${e} has no the ${n} method`);const o=await i[e][n](a,t);if(y!==void 0&&k[e]!=null&&k[e][n]!=null){const E=k[e][n](a,o);y({onEachesRet:E,invoke:f,tool:t})}u({invokedResult:o,requestId:d},t)}catch(o){u({errorMessage:""+o,requestId:d},t),l({errorMessage:""+o,invoke:f,tool:t})}};if(i[e]===void 0){console.warn(`${e}.${n}() will invoke with delay`),s[e]=()=>{console.warn(`${e}.${n}() invoked with delay`),r()},setTimeout(()=>{delete s[e],r()},1e4);return}r()}),function(e){const{scope:n,methods:a,beforeEachTools:f,onEachFeedback:u,defaultBeforeEachTool:t}=e,d=this;return Object.keys(a).forEach(r=>{h===void 0?d[r]=a[r]:d[r]=async(o,E)=>{if(!(await h({invoke:{method:r,scope:n,args:o},tool:E,args:o,beforeEachTools:f,defaultBeforeEachTool:t})).isStopPropagation)return a[r](o,E)}}),d.$$register=()=>{var r;i[n]!==void 0&&console.warn(`the ${n} is registered more then 1 times`),i[n]=d,k[n]=u,(r=s[n])==null||r.call(s)},this}},b=new Set,M=v=>{const{isNeedCheckClassName:h,send:y}=v;return function({scope:l,methods:i}){const k=this;if(h){if(b.has(l))throw new Error(`The invoker class ${l} was created again`);b.add(l)}return Object.keys(i).forEach(s=>{k[s]=(e,n)=>{const{promise:a,reject:f,resolve:u}=Promise.withResolvers();return y({scope:l,method:s,args:e},n).then(i[s]===!0?u:t=>{u(t),i[s](t)},f),a}}),this}};c.makeTSJRPCBaseMaker=w,c.makeTSJRPCMethodsMaker=M,Object.defineProperty(c,Symbol.toStringTag,{value:"Module"})});
